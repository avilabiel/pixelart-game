[{"/Users/Gabriel/workspace/Personal/pixelart-game/src/index.tsx":"1","/Users/Gabriel/workspace/Personal/pixelart-game/src/reportWebVitals.ts":"2","/Users/Gabriel/workspace/Personal/pixelart-game/src/App.tsx":"3","/Users/Gabriel/workspace/Personal/pixelart-game/src/components/Char/index.ts":"4","/Users/Gabriel/workspace/Personal/pixelart-game/src/components/Char/Char.component.tsx":"5"},{"size":554,"mtime":1650588062604,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1650588062605,"results":"8","hashOfConfig":"7"},{"size":194,"mtime":1650591123308,"results":"9","hashOfConfig":"7"},{"size":59,"mtime":1650591088254,"results":"10","hashOfConfig":"7"},{"size":3023,"mtime":1651330122380,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1hrmxl3",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/Gabriel/workspace/Personal/pixelart-game/src/index.tsx",[],[],[],"/Users/Gabriel/workspace/Personal/pixelart-game/src/reportWebVitals.ts",[],[],"/Users/Gabriel/workspace/Personal/pixelart-game/src/App.tsx",[],[],"/Users/Gabriel/workspace/Personal/pixelart-game/src/components/Char/index.ts",[],[],"/Users/Gabriel/workspace/Personal/pixelart-game/src/components/Char/Char.component.tsx",["29"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\n\ninterface CharProps {}\n\nconst SPACE_KEY = 32;\nconst A_KEY = 65;\nconst D_KEY = 68;\nconst P_KEY = 80;\nconst S_KEY = 83;\nconst W_KEY = 87;\nconst CTRL_KEY = 17;\n\ntype CharPosition = {\n  x: number;\n  y: number;\n};\n\nconst CharComponent: React.FC<CharProps> = (props) => {\n  const [classes, setClasses] = useState<string[]>([\"stopped\"]);\n  const [direction, setDirection] = useState<string>(\"down\");\n  const [position, setPosition] = useState<CharPosition>({ x: 0, y: 0 });\n  const [positionChar2, setPositionChar2] = useState<CharPosition>({\n    x: 50,\n    y: 50,\n  });\n\n  useEffect(() => {\n    const handleButtonPress = (event: any) => {\n      console.log(`PRESSING: ${event.keyCode}`);\n\n      if (event.keyCode === SPACE_KEY) {\n        setClasses([\"pre-special-attack\"]);\n\n        setTimeout(() => {\n          setClasses([\"die\"]);\n          setTimeout(() => {\n            setClasses([\"special-attack\"]);\n            setTimeout(() => setClasses([]), 1000);\n          }, 1000);\n        }, 1000);\n      }\n\n      if (event.keyCode === P_KEY) {\n        setClasses([\"attack\"]);\n      }\n\n      if (event.keyCode === A_KEY) {\n        setDirection(\"left\");\n        setClasses([\"left\"]);\n        setPosition((charPosition) => {\n          if (charPosition.x === 0) {\n            return charPosition;\n          }\n\n          return { ...charPosition, x: charPosition.x - 6 };\n        });\n      }\n\n      if (event.keyCode === D_KEY) {\n        setDirection(\"right\");\n        setClasses([\"right\"]);\n        setPosition((charPosition) => {\n          console.log(\"Position\", charPosition);\n          if (charPosition.x - 24 === window.screen.width) {\n            return charPosition;\n          }\n\n          return { ...charPosition, x: charPosition.x + 6 };\n        });\n      }\n\n      if (event.keyCode === S_KEY) {\n        setDirection(\"down\");\n        setClasses([\"down\"]);\n        setPosition((charPosition) => {\n          return { ...charPosition, y: charPosition.y + 6 };\n        });\n      }\n\n      if (event.keyCode === W_KEY) {\n        setDirection(\"up\");\n        setClasses([\"up\"]);\n      }\n\n      if (event.keyCode === CTRL_KEY) {\n        // Get inputs\n      }\n    };\n\n    const stopActions = () => {\n      console.log(\"STOP PRESSING!!!!\");\n\n      setClasses([\"stopped\"]);\n    };\n\n    window.addEventListener(\"keydown\", handleButtonPress);\n    window.addEventListener(\"keyup\", stopActions);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleButtonPress);\n      window.removeEventListener(\"keyup\", stopActions);\n    };\n  }, [classes]);\n\n  return (\n    <div>\n      <h1>Char</h1>\n      <div\n        className={\"char \" + direction + \" \" + classes.join(\" \")}\n        style={{ top: position.y, left: `${position.x}px` }}\n      ></div>\n      <div\n        className={\"char \" + direction + \" \" + classes.join(\" \")}\n        style={{ top: positionChar2.y, left: `${positionChar2.x}px` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default CharComponent;\n",{"ruleId":"30","severity":1,"message":"31","line":23,"column":25,"nodeType":"32","messageId":"33","endLine":23,"endColumn":41},"@typescript-eslint/no-unused-vars","'setPositionChar2' is assigned a value but never used.","Identifier","unusedVar"]